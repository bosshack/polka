" vundle
Bundle "Lokaltog/vim-easymotion"
Bundle "Shougo/unite.vim"
Bundle "Shougo/vimproc.vim"
Bundle "Shougo/vimshell.vim"
Bundle "SirVer/ultisnips"
Bundle "airblade/vim-gitgutter"
Bundle "chrisbra/NrrwRgn"
Bundle "chriskempson/base16-vim"
Bundle "dcpu16/dcpu16-vim-syntax"
Bundle "editorconfig/editorconfig-vim"
Bundle "golangtw/gocode.vim"
Bundle "gregsexton/MatchTag"
Bundle "hail2u/vim-css3-syntax"
Bundle "jelera/vim-javascript-syntax"
Bundle "juvenn/mustache.vim"
Bundle "marijnh/tern_for_vim"
Bundle "mattn/emmet-vim"
Bundle "mattn/gist-vim"
Bundle "mattn/webapi-vim"
Bundle "maxbrunsfeld/vim-yankstack"
Bundle "nelstrom/vim-qargs"
Bundle "ricardovaleriano/vim-github-theme"
Bundle "scrooloose/syntastic"
Bundle "sgur/unite-git_grep"
Bundle "slim-template/vim-slim"
Bundle "tpope/vim-abolish"
Bundle "tpope/vim-eunuch"
Bundle "tpope/vim-speeddating"
Bundle "uggedal/go-vim"
Bundle "vim-scripts/Gundo"
Bundle "vim-scripts/TaskList.vim"
Bundle "vim-scripts/ZenCoding.vim"
Bundle "vim-scripts/php.vim"

set list listchars=tab:\ \ ,trail:·
let g:UltiSnipsSnippetsDir="~/.vim/bundles/UltiSnips/UltiSnips/"

colorscheme base16-default
set background=dark
let g:airline_powerline_fonts=1
let g:airline_theme='tomorrow'
let g:bufferline_echo = 0

" make sure vimgutter looks good
highlight SignColumn ctermbg=black
highlight GitGutterAdd ctermbg=black
highlight GitGutterChange ctermbg=black
highlight GitGutterDelete ctermbg=black
highlight GitGutterChangeDelete ctermbg=black
let g:gitgutter_highlight_lines = 0

" set up soft wrap
command! -nargs=* Wrap set wrap linebreak nolist
let &showbreak='↪ '

let g:ackprg = 'ag --nogroup --nocolor --column'

au FileType javascript setl conceallevel=2 concealcursor=nc
let g:syntax_js=['function', 'return', 'solarized', 'this', 'proto']

" make escape work sensibly
set esckeys!

" make sure ctrl p ignores build folder in middleman
let g:ctrlp_custom_ignore = 'build/*'

" unite.vim bindings
" file search
nnoremap <C-p> :Unite -no-split file_rec/async<cr>
" content search
nnoremap <space>/ :Unite grep:.<cr>
" yank history
let g:unite_source_history_yank_enable = 1
nnoremap <space>y :Unite history/yank<cr>
" buffer switch
nnoremap <space>s :Unite -quick-match -auto-preview buffer<cr>

" ignore certain directories in unite
call unite#custom_source('file_rec,file_rec/async,file_mru,file,buffer,grep',
      \ 'ignore_pattern', join([
      \ '\.git/',
      \ '\.tmp/',
      \ '\tmp',
      \ '.|*cache*/',
      \ ], '\|'))

" fix meta-keys which generate <Esc>a .. <Esc>z
let c='a'
while c <= 'z'
  exec "set <M-".toupper(c).">=\e".c
  exec "imap \e".c." <M-".toupper(c).">"
  let c = nr2char(1+char2nr(c))
endw

" use gundo.vim
nnoremap <F3> :GundoToggle<CR>

" prevent syntastic from checking html constantly
let syntastic_mode_map = { 'passive_filetypes': ['html'] }

" use mustache for .hbs files
au BufRead,BufNewFile *.hbs set filetype=mustache
