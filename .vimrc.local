set list listchars=tab:\ \ ,trail:·
let g:UltiSnipsSnippetsDir="~/.vim/bundles/UltiSnips/UltiSnips/"

colorscheme base16-default
set background=dark
let g:airline_powerline_fonts=1
let g:airline_theme='tomorrow'
let g:bufferline_echo = 0

" make sure vimgutter looks good
highlight SignColumn ctermbg=black
highlight GitGutterAdd ctermbg=black
highlight GitGutterChange ctermbg=black
highlight GitGutterDelete ctermbg=black
highlight GitGutterChangeDelete ctermbg=black
let g:gitgutter_highlight_lines = 0

" set up soft wrap
command! -nargs=* Wrap set wrap linebreak nolist
let &showbreak='↪ '

let g:ackprg = 'ag --nogroup --nocolor --column'

au FileType javascript setl conceallevel=2 concealcursor=nc
let g:syntax_js=['function', 'return', 'solarized', 'this', 'proto']

" make escape work sensibly
set esckeys!

" make sure ctrl p ignores build folder in middleman
let g:ctrlp_custom_ignore = 'build/*'

" unite.vim bindings
" file search
nnoremap <C-p> :Unite -no-split file_rec/async<cr>
" content search
nnoremap <space>/ :Unite -auto-preview vcs_grep:.<cr>
" yank history
let g:unite_source_history_yank_enable = 1
nnoremap <space>y :Unite history/yank<cr>
" buffer switch
nnoremap <space>s :Unite -quick-match -auto-preview buffer<cr>

" fix meta-keys which generate <Esc>a .. <Esc>z
let c='a'
while c <= 'z'
  exec "set <M-".toupper(c).">=\e".c
  exec "imap \e".c." <M-".toupper(c).">"
  let c = nr2char(1+char2nr(c))
endw

" use gundo.vim
nnoremap <F3> :GundoToggle<CR>
